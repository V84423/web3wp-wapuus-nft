# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: wapuuapi
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  httpApi:
    cors: true
  logs:
    httpApi: true
    format: '{"requestId": "$context.requestId", "ip": "$context.identity.sourceIp", "userAgent": "$context.identity.userAgent", "requestTime": "$context.requestTime", "httpMethod": "$context.httpMethod", "routeKey": "$context.routeKey", "status": "$context.status", "protocol": "$context.protocol", "responseLength": "$context.responseLength"}'
  environment:
    STAGE: ${opt:stage, self:provider.stage}
    
# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  wapuus:
    handler: handler.getWapuu
    events:
      - httpApi:
          path: /wapuus/{id}
          method: GET
  verify:
    handler: handler.postVerify
    events:
      - httpApi:
          path: /wapuus/verify
          method: POST
  verify-collector:
    handler: handler.postOGVerify
    events:
      - httpApi:
          path: /wapuus/verify-collector
          method: POST
  
  verify-owned:
    handler: handler.postOwned
    events:
      - httpApi:
          path: /wapuus/owned
          method: POST
  owned:
    handler: handler.getOwned
    events:
      - httpApi:
          path: /wapuus/owned/{wallet}
          method: GET
